services:
  postgres:
    image: postgres:16
    container_name: shelter_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: data_api_dev
    ports:
      - "5431:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: shelter_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  data_compiler:
    build:
      context: ./data_compiler
    container_name: shelter_compiler
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./data_compiler:/app
      - /app/deps
      - /app/_build
    command: >
      sh -c "
        mix deps.get &&
        mix run compile_config.exs &&
        tail -f /dev/null
      "

  backend:
    build:
      context: ./data_api
    container_name: shelter_backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      data_compiler:
        condition: service_started
    environment:
      - MIX_ENV=dev
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "4000:4000"
    volumes:
      - ./data_api:/app
      - /app/deps
      - /app/_build
    command: >
      sh -c "
        mix deps.get &&
        mix ecto.create &&
        mix ecto.migrate &&
        mix run priv/repo/seeds.exs &&
        mix phx.server
      "

  frontend:
    build:
      context: ./runtime-client
      dockerfile: Dockerfile.dev
    container_name: shelter_frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./runtime-client:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://backend:4000

volumes:
  pgdata: